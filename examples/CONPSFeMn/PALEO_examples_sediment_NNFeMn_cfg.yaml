########################################################
# Dale (2015) shelf/slope test cases with Corg, O2, NO2, NO3, Mn, Fe, SO4/H2S, P, with FeS system and pyrite
# Default config has four columns: 2*shelf, 2*slope
# Set num_columns and per-column parameters to define a different ensemble.
##############################################################
sediment_Corg_O2NNMnFeS:
    parameters:
        num_columns: 4
        CIsotope: ScalarData
        SIsotope: ScalarData
    domains:
        global:
            # scalar domain
     
        fluxOceanfloor:
            reactions:
                floorstubparticulateflux:
                    class: ReactionFluxTarget
                    parameters:
                        const_stub: true
                        target_prefix: particulateflux_
                        fluxlist: ["Corg", "MnHR", "MnMR", "FeHR", "FeMR", "FePR", "S0", "FeSm", "FeS2pyr",]
                    
                    variable_attributes:
                        #                                       Dale (2015) test cases
                        #                                       shelf   shelf       slope   slope
                        #                                 
                        #                                       9.4    9.4         3       3       mmol/m^2/d
                        particulateflux_Corg:initial_value:     [3.43,  3.43,       1.10,   1.10] # mol/column/yr-1
                        # particulateflux_Corg:initial_delta: -25.0
                        #                                       187           30              MnT umol/m^2/d, 1/2 of this to each of MnHR, MnMR
                        particulateflux_MnHR:initial_value:     [0.0342, 0.0342, 0.0101, 0.0101] # mol yr-1 = umol/m^2/d * 1e-6 * area m^2 * 365.25
                        particulateflux_MnMR:initial_value:     [0.0342, 0.0342, 0.0101, 0.0101] # mol yr-1 = umol/m^2/d * 1e-6 * area m^2 * 365.25
                        #                                       1840          290             FeT umol/m^2/d, 1/6 of this to each of FeHR, FeMR, FePR
                        particulateflux_FeHR:initial_value:     [0.112, 0.112,  0.0177, 0.0177] # mol yr-1 = umol/m^2/d * 1e-6 * area m^2 * 365.25
                        particulateflux_FeMR:initial_value:     [0.112, 0.112,  0.0177, 0.0177] # mol yr-1 = umol/m^2/d * 1e-6 * area m^2 * 365.25
                        particulateflux_FePR:initial_value:     [0.112, 0.112,  0.0177, 0.0177] # mol yr-1 = umol/m^2/d * 1e-6 * area m^2 * 365.25
                        particulateflux_S0:initial_value:       0.0
                        particulateflux_FeSm:initial_value:     0.0
                        particulateflux_FeS2pyr:initial_value:  0.0

                floorstubsoluteflux:
                    class: ReactionFluxTarget
                    parameters:
                        target_prefix: soluteflux_
                        fluxlist: ["O2", "DIC", "TP", "SO4", "TH2S", "CH4", "H2", "FeII", "MnII", "NO2", "NO3", "TNH3"]
                   

        fluxOceanBurial:       
            reactions:
                
                burialfluxes:
                    class: ReactionFluxTarget
                    parameters:
                        target_prefix: flux_
                        fluxlist: [
                            "Corg_1", "Corg_2", "Corg_3", "Corg_4", "Corg_5", "Corg_6", "Corg_7", "Corg_8", "Corg_9", "Corg_10", "Corg_11", "Corg_12", "Corg_13", "Corg_14",
                            "MnHR", "MnMR", "FeHR", "FeMR", "FePR", "S0", "FeSm", "FeS2pyr",
                            "O2", "DIC", "TP", "SO4", "TH2S", "CH4", "H2", "FeII", "MnII", "NO2", "NO3", "TNH3",
                        ]
                
                total_Corg: # add up the multi-G fractions -> flux_Corg
                    class: ReactionVectorSum
                    parameters:
                        vars_prefix: flux_                        
                        vars_to_add: ["Corg_1", "Corg_2", "Corg_3", "Corg_4", "Corg_5", "Corg_6", "Corg_7", "Corg_8", "Corg_9", "Corg_10", "Corg_11", "Corg_12", "Corg_13", "Corg_14" ]
                    variable_links:
                        sum: flux_Corg
 
        oceanfloor:

            reactions:
                grid:
                    class: ReactionUnstructuredVectorGrid
                    parameters:
                        ncells: external%num_columns
                
                floorstubphys: 
                    class: ReactionConst
                    parameters:
                        constnames: ["Afloor", "zfloor", "temp", "sal", "phi", "phimin", "w_accum", "zbioturb", "zbioirrig", "Dbio", "alpha"]
                    variable_attributes:
                        #                       Dale (2015) test cases
                        #                       shelf       shelf       slope       slope
                        Afloor:initial_value:   [1.0,       1.0,        1.0,        1.0] # m^2 column area
                        zfloor:initial_value:   [-100.0,    -100.0,    -600.0,      -600.0] # m
                        temp:initial_value:     [283.15,    283.15,     281.15,     281.15]  # K
                        sal:initial_value:      35.0 # psu
                        phi:initial_value:      0.9 # surface porosity
                        phimin:initial_value:   0.7 # minimum porosity
                        w_accum:initial_value:  [100e-5,   100e-5,      16e-5,      16e-5]  # m yr-1 (100, 16 cm kyr-1)
                        zbioturb:initial_value:  0.03  # m, 3 cm bioturbation characteristic depth
                        zbioirrig:initial_value: [0.02,     0.02,       0.0075,     0.0075] # m biorrigation characteristic depth
                        Dbio:initial_value:     [28e-4,     28e-4,      18e-4,      18e-4] # m^2 yr-1 (28, 16 cm^2 yr-1)
                        alpha:initial_value:    [465.0,     465.0,      114.0,      114.0] # yr-1 bioirrigation coefficient at surface

                floorstubsoluteconc: 
                    class: ReactionConst
                    parameters:
                        constnames: [
                            "O2_conc", "DIC_conc", "TP_conc", "SO4_conc", "TH2S_conc", "CH4_conc", "H2_conc",
                            "FeII_conc", "MnII_conc", "NO2_conc", "NO3_conc", "TNH3_conc",
                        ]
                    variable_attributes:
                        #                       Dale (2015) test cases
                        #                       shelf       shelf       slope       slope
                        O2_conc:initial_value:      [0.200,    0.001,      0.200,      0.001]  # (mol m-3)
                        DIC_conc:initial_value:     2.0  # (mol m-3) 2000 uM
                        NO3_conc:initial_value:     35e-3  # (mol m-3) 35 uM
                        NO2_conc:initial_value:     0.0
                        TNH3_conc:initial_value:    1e-3 # (mol m-3) 1 uM
                        SO4_conc:initial_value:     28.0 # mol m-3 
                        TH2S_conc:initial_value:    0.0  # mol m-3
                        CH4_conc:initial_value:     0.0  # mol m-3
                        H2_conc:initial_value:      0.0  # mol m-3
                        FeII_conc:initial_value:    0.0  # mol m-3
                        MnII_conc:initial_value:    0.0
                        TP_conc:initial_value:      2e-3  # (mol m-3) 2 uM
                        

                transfer_particulatefluxOceanfloor:
                    class: ReactionFluxTransfer
                    parameters:
                        transfer_matrix:      Identity
                        input_fluxes:         fluxOceanfloor.particulateflux_$fluxname$
                        output_fluxes:        sediment.oceanfloor.$fluxname$_sms
                    variable_links:                       

        sediment:
            reactions:
                bioratesed:
                    class: ReactionSedimentBioRates
                    parameters:
                        f_bioTurbDepth:         Exp2Cutoff
                        f_bioIrrigDepth:        Exp1Cutoff
                        separate_zbio:          true
                        f_bioO2:                Dale2015 
                        bioO2halfmax:           20e-3 # (mol m-3) (Dale 2015 'a', 20 uM)
                        bioO2decreaserate:      12e-3 # (mol m-3) (Dale 2015 'b', 12 uM)

                # transportsed:
                #     class: ReactionSedimentTransport
                #     parameters:
                #         L:                              0.30  # (m) column length
                #         ncellspercol:                   100 # 300
                #         f_grid:                         quadratic
                #         grid_eta:                       0.075
                #         zdbl:                           0.04e-2  # diffusive boundary layer at sediment-water interface
                #         f_porosity:                     ExpAtten # 
                #         zpor:                           0.1 # (m) lengthscale for porosity decrease
                #         w_solute:                       true  # include solute advection (w_solute = w_solid at base of column)


                gridsed:
                    class: ReactionSedimentGridn1D
                    parameters:
                        L:                             0.30  # (m) column length
                        ncellspercol:                  100 # 300
                        f_grid:                        quadratic
                        grid_eta:                      0.075
                        
                physsed:
                    class: ReactionSedimentPhys
                    parameters:                        
                        f_porosity:                    ExpAtten #  Const
                        zpor:                          0.1 # (m) lengthscale for porosity
                        w_solute:                      true  # w_solute = w_solid at base of column

                transportsedsolid:
                    class: ReactionSedimentTransportSolid

                molecular_diffusivity:   
                    class: ReactionAqMolecularDiffusivity

                transportsedsolute:
                    class: ReactionSedimentTransportSolute
                    parameters:
                        zdbl:                           0.04e-2  # diffusive boundary layer at sediment-water interface                     
                        solute_burial_flux:             true  # include solute burial flux terms

                ################################################################################
                # Solute reservoirs
                #################################################################################

                reservoir_O2: {class: ReactionReservoirTotal, variable_links: {R*: O2*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: O2, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 200e-3 }}

                reservoir_NO2: {class: ReactionReservoirTotal, variable_links: {R*: NO2*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: NO2, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 10e-3 }}

                reservoir_NO3: {class: ReactionReservoirTotal, variable_links: {R*: NO3*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: NO3, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 10e-3 }}

                reservoir_TNH3: {class: ReactionReservoirTotal, variable_links: {R*: TNH3*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: NH4, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_TP: {class: ReactionReservoirTotal, variable_links: {R*: TP*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: HPO4, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_SO4: {class: ReactionReservoirTotal, variable_links: {R*: SO4*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: SO4, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 10.0 }}

                reservoir_TH2S: {class: ReactionReservoirTotal, variable_links: {R*: TH2S*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: H2S, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_DIC: {class: ReactionReservoirTotal, variable_links: {R*: DIC*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: HCO3, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_CH4: {class: ReactionReservoirTotal, variable_links: {R*: CH4*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: CH4, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_H2: {class: ReactionReservoirTotal, variable_links: {R*: H2*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: H2, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_MnII: {class: ReactionReservoirTotal, variable_links: {R*: MnII*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: Mn, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                reservoir_FeII: {class: ReactionReservoirTotal, variable_links: {R*: FeII*, volume: volume_solute}, 
                    variable_attributes: {R_conc%diffusivity_speciesname: Fe, R_conc%gamma: 0.2, R_conc%vphase: VP_Solute, R%initial_value: 1e-12, R%norm_value: 1.0 }}

                # No TAlk or N2 reservoir, but track  _sms fluxes to allow budget check
                TAlk_N2_sms: {class: ReactionFluxTarget, parameters: {target_prefix: "",
                    fluxlist: ["TAlk_sms", "N2_sms"]}}

                TAlk_sms_sum_columns: {class: ReactionSumColumns_dev,
                    variable_links: {X: TAlk_sms, X_sum: budgets.TAlk_column_sms}}

                N2_sms_sum_columns: {class: ReactionSumColumns_dev,
                    variable_links: {X: N2_sms, X_sum: budgets.N2_column_sms}}

                ###########################################################################
                # Solid phase reservoirs
                #########################################################################

                reservoir_Corg:
                    class: ReactionRCmultiG
                    parameters:
                        #                   1     2    3      4    5      6     7     8     9     10    11   12   13   14
                        k_bin_edges:        [1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1e0, 1e1, 1e2] #  yr-1
                        k_dist_modifier: [1.0,   1.0, 1.0,   1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, 1.0,  1.0, 1.0]
                        a: 3e-4 # yr-1  reactive-continuum model average lifetime
                        v: 0.125 # reactive-continuum model shape parameter
                        field_data: external%CIsotope

                    variable_links:
                        volume:                         volume_solid
                        # POC_decay:                      DIC_sms  # dump all Corg -> DIC for test case

                    variable_attributes:
                        Corg_*_conc:vphase:             VP_Solid
                        Corg_*:initial_value:           1e-12

                # MnO2
                reservoir_MnHR: {class: ReactionReservoirTotal, variable_links: {R*: MnHR*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                reservoir_MnMR: {class: ReactionReservoirTotal, variable_links: {R*: MnMR*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                # ~ Fe(OH)3 (an FeIII oxide)
                reservoir_FeHR: {class: ReactionReservoirTotal, variable_links: {R*: FeHR*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                reservoir_FeMR: {class: ReactionReservoirTotal, variable_links: {R*: FeMR*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                reservoir_FePR: {class: ReactionReservoirTotal, variable_links: {R*: FePR*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                reservoir_FeSm: {class: ReactionReservoirTotal, variable_links: {R*: FeSm*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                reservoir_S0: {class: ReactionReservoirTotal, variable_links: {R*: S0*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}

                reservoir_FeS2pyr: {class: ReactionReservoirTotal, variable_links: {R*: FeS2pyr*, volume: volume_solid},
                    variable_attributes: {R_conc%vphase: VP_Solid, R%initial_value: 1e-12, R%norm_value: 1.0}}
               
                #########################################################
                # Equilibrium chemistry
                #########################################################

                # no carbonate system or speciation in this configuration

                ###################################################################################
                # POC remineralization 
                ################################################################################

                pocdecaycomponents:
                    class: ReactionFluxToComponents
                    parameters: 
                        outputflux_prefix: remin_                   
                        outputflux_names: ["Corg", "N", "P"]
                        #                  106/106 16/106  1/106
                        outputflux_stoich: [1.0, 0.15094, 0.009434]   # must match input Corg stoich
                    variable_links:
                        inputflux:  POC_decay
                   
                reminsed:
                    class: ReactionReminO2_NN_Mn_Fe_SO4_CH4

                    parameters:
                        oxreminlimit:       1e-3 # (mol m-3) Dale (2015)
                        NO2reminlimit:      10e-3 # (mol m-3) Dale (2015)
                        NO3reminlimit:      10e-3 # (mol m-3) Dale (2015)
                        # 1 wt % Mn = 1e-2 * 2.5e6 / 54.94 = 455 mol Mn / (m3 solid phase)
                        # K_Mn = 0.1 wt% Mn = 45.5 mol MnHR / (m3 solid phase)  (Dale 2015)
                        # (cf  40 mol m-3 =  16e-6*2.5e6 (16 umol MnO2 g-1 assuming dry density is 2.5 g/cm^3 (= 2.5e6 g m^-3), Van Cappellen 1996))
                        MnIVOxreminlimit:   45.5 # (mol MnHR / m^3 solid phase)
                        # 1 wt % Fe = 1e-2 * 2.5e6 / 55.85 = 448 mol Fe / (m3 solid phase)
                        # K_Fe = 0.6 wt% Fe = 268.6 mol FeHR / (m^3 solid phase) (Dale 2015)
                        # (cf  250 = 100e-6*2.5e6 (100 umol Fe(OH)3 g-1 assuming dry density is 2.5 g/cm^3 (= 2.5e6 g m^-3), Van Cappellen 1996))
                        FeIIIOxreminlimit:  268.6 # (mol FeHR / m3 solid phase)
                        SO4reminlimit:      500.0e-3 # (mol m-3) Dale (2015)                        

                    variable_links:
                        FeIIIOx_conc:       FeHR_conc
                        MnIVOx_conc:        MnHR_conc
                        soluteflux_*:       "*_sms"
                        soluteflux_H2S:     TH2S_sms
                        soluteflux_FeII:    FeII_sms
                        soluteflux_FeIIIOx: FeHR_sms
                        soluteflux_MnIVOx:  MnHR_sms
                        soluteflux_TNH3:    TNH3_sms
                        soluteflux_P:       TP_sms

                #######################################
                # Secondary redox
                ###########################################

                #  NH4+ + NO2- -> N2 annamox, K 1e5  (mol m-3)-1 1e8*1e-3 (Dale 2015) R9
                redox_TNH3_NO2:   {class: ReactionAqKinetic, parameters: {
                    K: 1e5,         Reactants: ["TNH3", "NO2"],             Products: ["N2"]},                          variable_links: {volume: volume_solute}}

                #  NH4+ + 2 * O2 -> NO3- + H2O + H+ aerobic oxidation of ammonia, K 1e4 #(mol m-3)-1 1e7*1e-3 (Dale 2015) R10
                redox_TNH3_O2:   {class: ReactionAqKinetic, parameters: {
                    K: 1e4,         Reactants: ["TNH3", "2*O2"],             Products: ["NO3", "-2*TAlk"]},             variable_links: {volume: volume_solute}}

                #  NO2- + 0.5 O2 -> NO3- aerobic oxidation of NO2, K 1e4 #(mol m-3)-1 1e7*1e-3 (Dale 2015) R11
                redox_NO2_O2:   {class: ReactionAqKinetic, parameters: {
                    K: 1e4,         Reactants: ["NO2", "0.5*O2"],           Products: ["NO3",]},                        variable_links: {volume: volume_solute}}             
             
                # Mn++ + 1/2 O2 + H2O -> MnIVOx + 2 H+ aerobic oxidation of MnII, K = 5e3 (mol m-3)-1 yr-1,  5e6 M-1 yr-1 Dale (2015) R12
                redox_MnII_O2:  {class: ReactionAqKinetic, parameters: {
                    K: 5e3,         Reactants: ["MnII", "0.5*O2"],          Products: ["MnHR", "-2*TAlk"]},             variable_links: {volume: volume_solute}}

                # Fe++ + 1/4 O2 + H2O -> FeIIIOx + 2 H+, aerobic oxidation of FeII, K = 5e5 (mol m-3)-1 yr-1,  5e8 M-1 yr-1 = 5e8*1e-3 (mol m-3)-1 yr-1, Dale (2015) R13
                redox_FeII_O2:  {class: ReactionAqKinetic, parameters: {
                    K: 5e5,         Reactants: ["FeII", "0.25*O2"],         Products: ["FeHR", "-2*TAlk"]},             variable_links: {volume: volume_solute}}

                # Fe++ + 2/10 NO3- + 9/10 H2O -> FeIIIOx + 1/10 N2 + 18/10 H+, anaerobic oxidation of FeII, K = 1e2 (mol m-3)-1 yr-1,  1e5 M-1 yr-1 , Dale (2015) R14
                redox_FeII_NO3:  {class: ReactionAqKinetic, parameters: {
                    K: 1e2,         Reactants: ["FeII", "0.2*NO3"],         Products: ["FeHR", "0.1*N2", "-1.8*TAlk"]}, variable_links: {volume: volume_solute}}

                # 2 O2 + H2S -> SO4-- + 2 H+,         K (mol m-3)-1 = 1e5*1e-3 Dale (2015) R 15
                redox_H2S_O2:   {class: ReactionAqKinetic, parameters: {
                    K: 1e2,         Reactants: ["2*O2", "TH2S"],            Products: ["SO4", "-2*TAlk"]},              variable_links: {volume: volume_solute}}
                                
                # O2 + 0.5 CH4 -> 0.5 DIC (CO2) + H2O,  K (mol m-3)-1 = 1e7 = 1e10*1e-3, not included in Dale (2015)
                redox_CH4_O2:   {class: ReactionAqKinetic, parameters: {
                    K: 1e7,         Reactants:  ["O2", "0.5*CH4"],          Products: ["0.5*DIC"],},                    variable_links: {volume: volume_solute}}

                # FeS + 2 O2 -> Fe++ + SO4--,    K (mol m-3)-1 = 1e5 (M-1 yr-1)*1e-3, Dale (2015) R16
                redox_FeS_O2:   {class: ReactionAqKinetic, parameters: {
                    K: 1e2,         Reactants: ["2*O2", "FeSm"],            Products: ["FeII", "SO4"]},                 variable_links: {volume: volume_solid}}

                # FeS2pyr + 2 O2 -> Fe++ + 2* SO4--        K (mol m-3)-1 = 1e3 (M-1 yr-1)*1e-3 Dales (2015) R17
                redox_FeS2pyr_O2: {class: ReactionAqKinetic, parameters: {
                    K: 1e0,         Reactants: ["3.5*O2", "FeS2pyr"],       Products: ["FeII", "2*SO4", "-2*TAlk"]},    variable_links: {volume: volume_solid}}

                # SO4-- + CH4 + 2 H+ -> DIC + H2S + 2 H2O,  K = 1e5 yr-1, K_SO4 = 0.5 mM = 0.5 mol m-3, Dale (2015) R18
                redox_CH4_SO4:   {class: ReactionAqKinetic, parameters: {
                    K: 1e7,  K_lim:  0.5,  Reactants:  ["SO4", "CH4"],      Products: ["DIC", "TH2S", "2.0*TAlk"],
                                    Reactant_concs: ["SO4_conc", "CH4_conc"], Rate_functions: ["monod", "linear"]},     variable_links: {volume: volume_solute}}

               # H2 + 0.5 O2 -> H2O, K = 1e6 # (mol m-3)-1 yr-1 = 1e6 M-1 yr-1 *1e-3 NB: arbitrary rate, just need to scavenge H2 produced during pyrite formation), Dale (2015) R22
                redox_H2_O2:    {class: ReactionAqKinetic, parameters: {
                    K: 1e3,         Reactants:  ["H2", "0.5*O2"],           Products: []},                          variable_links: {volume: volume_solute}}
                
                # H2 + 0.25 SO4 + 0.5 H+ -> 0.25 H2S + H2O, K = 1e3 (mol m-3)-1 yr-1 = 1e6 M-1 yr-1 *1e-3 NB: arbitrary rate, just need to scavenge H2 produced during pyrite formation), Dale (2015) R22
                redox_H2_SO4:   {class: ReactionAqKinetic, parameters: {
                    K: 1e3,         Reactants:  ["H2", "0.25*SO4"],         Products: ["0.25*TH2S", "0.5*TAlk"]},    variable_links: {volume: volume_solute}}

                # S0 + H2O -> 0.75 H2S + 0.25 SO4-- + 0.5 H+ sulpur disproportionation,  K = 1 yr-1, Dale (2015) R23
                redox_S0:       {class: ReactionAqKinetic, parameters: {
                    K: 1.0,         Reactants:  ["S0",],                    Products: ["0.75*TH2S", "0.25*SO4", "-0.5*TAlk"]}, variable_links: {volume: volume_solid}}

                # MnHR + 2 Fe++ + H2O -> Mn++ + 2 FeHR + 2 H+,  K = 1e4 (mol m-3)-1 = 1e7*1e-3, Dale (2015) R24
                redox_MnHR_FeII: {class: ReactionAqKinetic, parameters: {
                    K: 1e4,         Reactants: ["MnHR", "2*FeII"],          Products: ["MnII", "2*FeHR", "-2*TAlk"]},   variable_links: {volume: volume_solid}}

                # MnMR + 2 Fe++ + H2O -> Mn++ + 2 FeHR + 2 H+,  K = 1e4 (mol m-3)-1 = 1e5*1e-3, Dale (2015) R24
                redox_MnMR_FeII: {class: ReactionAqKinetic, parameters: {
                    K: 1e4,         Reactants: ["MnMR", "2*FeII"],          Products: ["MnII", "2*FeHR", "-2*TAlk"]},   variable_links: {volume: volume_solid}}

                # H2S + MnHR + 2 H+ -> Mn++ + S0 + 2 H2O,  K = 1e2 (mol m-3)-1 = 1e5*1e-3 Dale (2015) R25
                redox_MnHR_H2S: {class: ReactionAqKinetic, parameters: {
                    K: 1e2,         Reactants: ["MnHR", "TH2S"],            Products: ["MnII", "S0", "2*TAlk"]},        variable_links: {volume: volume_solid}}

                # H2S + MnMR + 2 H+ -> Mn++ + S0 + 2 H2O,  K = 1e0 (mol m-3)-1 = (1e3 M-1 yr-1)*1e-3 Dale (2015) R25
                redox_MnMR_H2S: {class: ReactionAqKinetic, parameters: {
                    K: 1e0,         Reactants: ["MnMR", "TH2S"],            Products: ["MnII", "S0", "2*TAlk"]},        variable_links: {volume: volume_solid}}
 
                # 0.5 H2S + FeHR + 2 H+ -> Fe++ + 0.5 S0 + 3/2 H2O,  K = 3.16 (mol m-3)^{-0.5} =  (100 M^{-0.5} yr-1)*1e-3^{0.5} Dale (2015) R26
                redox_FeHR_H2S: {class: ReactionAqKinetic, parameters: {
                    K: 3.16e0,      Reactants: ["FeHR", "0.5*TH2S"],           Products: ["FeII", "0.5*S0", "2*TAlk"], 
                                    Reactant_concs: ["FeHR", "TH2S"],   Rate_functions: ["linear", "sqrt"]},            variable_links: {volume: volume_solid}}

                # H2S + 2*FeMR + 4 H+ -> 2*Fe++ + S0 + 3 H2O,  K = 3.16e-3 (mol m-3)^{-0.5} =  (0.1 M^{-0.5} yr-1)*1e-3^{0.5} Dale (2015) R26
                redox_FeMR_H2S: {class: ReactionAqKinetic, parameters: {
                    K: 3.16e-3,     Reactants: ["FeMR", "0.5*TH2S"],           Products: ["FeII", "0.5*S0", "2*TAlk"], 
                                    Reactant_concs: ["FeMR", "TH2S"],   Rate_functions: ["linear", "sqrt"]},            variable_links: {volume: volume_solid}}

                # H2S + 2*FeMR + 4 H+ -> 2*Fe++ + S0 + 3 H2O,  K = 3.16e-3 (mol m-3)^{-0.5} =  (3e-4 M^{-0.5} yr-1)*1e-3^{0.5} Dale (2015) R26
                redox_FePR_H2S: {class: ReactionAqKinetic, parameters: {
                    K: 9.49e-6,     Reactants: ["FePR", "0.5*TH2S"],           Products: ["FeII", "0.5*S0", "2*TAlk"], 
                                    Reactant_concs: ["FePR", "TH2S"],   Rate_functions: ["linear", "sqrt"]},            variable_links: {volume: volume_solid}}
        
 
                ###########################################
                # Mineral formation / dissolution
                ###########################################

                # FeSm formation, K = 1e6 * 1e-3 (mol m-3)-1 yr-1, Dale (2015) R19
                # Fe++ + HS- -> FeS + H+
                FeSm_precip: {class: ReactionAqKinetic, parameters: {
                    K: 1e3,             Reactants: ["FeII", "TH2S"],        Products: ["FeSm", "-2*TAlk"]},         variable_links: {volume: volume_solute}}

                 # Pyrite  FeSm + H2S -> FeS2pyr + H2, K = 1e2  (mol m-3) yr-1 = 1e5*1e-3 (mol m-3) yr-1, Dale (2015) R20
                pyrite_H2S: {class: ReactionAqKinetic, parameters: {
                    K: 1e2,             Reactants: ["FeSm", "TH2S"],        Products: ["FeS2pyr", "H2"]},           variable_links: {volume: volume_solid}}

                # Pyrite  FeSm + S0 -> FeS2pyr, K = 1e2  (mol m-3) yr-1 = 1e5*1e-3 (mol m-3) yr-1, Dale (2015) R21
                # TODO check rate factor - two solid phases reacting -> K is not M-1 yr-1 ? so could be out by factor ~ phi 
                pyrite_S0:  {class: ReactionAqKinetic, parameters: {
                    K: 1e2,             Reactants: ["FeSm", "S0"],          Products: ["FeS2pyr"]},                 variable_links: {volume: volume_solid}}

                MnHRdecay:
                    class: ReactionParticleDecay
                    parameters:
                        decay_timescale:     0.588  # (yr) = 1/(1.7 yr-1), Dale (2015) R27
                    variable_links:
                        Particle*:       MnHR*
                        decayflux:       MnMR_sms

                FeHRdecay:
                    class: ReactionParticleDecay
                    parameters:
                        decay_timescale:    1.429  # (yr) = 1 / (0.7 yr-1) , Dale (2015) R28
                        show_decayrate:     true # needed for FeP coprecipitation
                    variable_links:
                        Particle*:       FeHR*
                        decayflux:       FeMR_sms
                        decayrate:       rate_FeHR_FeMR

        sedimentfloor:
            reactions:
           

        budgets:
            reactions:
                grid:
                    class: ReactionUnstructuredVectorGrid
                    parameters:
                        ncells: external%num_columns
            
                column_totals:
                    class: ReactionFluxTarget
                    parameters:
                        target_prefix: ""
                        fluxlist: ["TAlk_column_sms", "N2_column_sms"]

                ############################################################################
                # per-column net input into sediment
                # 
                # solid X:
                #   fluxOceanfloor.particulateflux_X - fluxOceanBurial.flux_X
                # solute X:
                #   -fluxOceanfloor.soluteflux_X - fluxOceanBurial.flux_X
                ############################################################################

                budget_C:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            "fluxOceanfloor.particulateflux_Corg",          "-1*fluxOceanBurial.flux_Corg", 
                            "-1*fluxOceanfloor.soluteflux_DIC",             "-1*fluxOceanBurial.flux_DIC",
                            "-1*fluxOceanfloor.soluteflux_CH4",             "-1*fluxOceanBurial.flux_CH4",
                        ]
                    variable_links:
                        sum: net_input_C

                budget_N:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            # stoich factor Norg/Corg = 16/106 = 0.15094
                            "0.15094*fluxOceanfloor.particulateflux_Corg",   "-0.15094*fluxOceanBurial.flux_Corg",
                            "-1*fluxOceanfloor.soluteflux_NO3",              "-1*fluxOceanBurial.flux_NO3",
                            "-1*fluxOceanfloor.soluteflux_NO2",              "-1*fluxOceanBurial.flux_NO2",
                            "-1*fluxOceanfloor.soluteflux_TNH3",              "-1*fluxOceanBurial.flux_TNH3",
                            "-2*N2_column_sms", 
                        ]
                    variable_links:
                        sum: net_input_N

                budget_P:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            # stoich factor Porg/Corg = 1/106 = 9.434e-3
                            "9.434e-3*fluxOceanfloor.particulateflux_Corg", "-9.434e-3*fluxOceanBurial.flux_Corg",
                            "-1*fluxOceanfloor.soluteflux_TP",              "-1*fluxOceanBurial.flux_TP",
                        ]
                    variable_links:
                        sum: net_input_P

                budget_Mn:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            "fluxOceanfloor.particulateflux_MnHR",          "-1*fluxOceanBurial.flux_MnHR",
                            "fluxOceanfloor.particulateflux_MnMR",          "-1*fluxOceanBurial.flux_MnMR",
                            "-1*fluxOceanfloor.soluteflux_MnII",            "-1*fluxOceanBurial.flux_MnII",
                        ]
                    variable_links:
                        sum: net_input_Mn

                budget_Fe:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            "fluxOceanfloor.particulateflux_FeHR",          "-1*fluxOceanBurial.flux_FeHR",
                            "fluxOceanfloor.particulateflux_FeMR",          "-1*fluxOceanBurial.flux_FeMR",
                            "fluxOceanfloor.particulateflux_FePR",          "-1*fluxOceanBurial.flux_FePR",
                            "fluxOceanfloor.particulateflux_FeSm",          "-1*fluxOceanBurial.flux_FeSm",
                            "fluxOceanfloor.particulateflux_FeS2pyr",       "-1*fluxOceanBurial.flux_FeS2pyr",
                            "-1*fluxOceanfloor.soluteflux_FeII",            "-1*fluxOceanBurial.flux_FeII",
                        ]
                    variable_links:
                        sum: net_input_Fe

                budget_S:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            "-1*fluxOceanfloor.soluteflux_TH2S",            "-1*fluxOceanBurial.flux_TH2S",
                            "-1*fluxOceanfloor.soluteflux_SO4",             "-1*fluxOceanBurial.flux_SO4",
                            "fluxOceanfloor.particulateflux_S0",            "-1*fluxOceanBurial.flux_S0",
                            "fluxOceanfloor.particulateflux_FeSm",          "-1*fluxOceanBurial.flux_FeSm",
                            "2*fluxOceanfloor.particulateflux_FeS2pyr",     "-2*fluxOceanBurial.flux_FeS2pyr",
                        ]
                    variable_links:
                        sum: net_input_S

                budget_TAlk:
                    class: ReactionVectorSum
                    parameters:
                        vars_to_add: [
                            "-1*TAlk_column_sms", 
                            "-2*fluxOceanfloor.soluteflux_SO4",             "-2*fluxOceanBurial.flux_SO4",
                            "-1*fluxOceanfloor.soluteflux_NO2",             "-1*fluxOceanBurial.flux_NO2",
                            "-1*fluxOceanfloor.soluteflux_NO3",             "-1*fluxOceanBurial.flux_NO3",
                            "1*fluxOceanfloor.soluteflux_TNH3",             "1*fluxOceanBurial.flux_TNH3",
                            "-1*fluxOceanfloor.soluteflux_TP",              "-1*fluxOceanBurial.flux_TP",
                            "2*fluxOceanfloor.soluteflux_MnII",             "2*fluxOceanBurial.flux_MnII",
                            "2*fluxOceanfloor.soluteflux_FeII",             "2*fluxOceanBurial.flux_FeII",
                        ]
                    variable_links:
                        sum: net_input_TAlk